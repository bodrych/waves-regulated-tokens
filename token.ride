let adminPublicKey = base58'AjiJTAnh1zMMUTHYCyrN4XzdpDb9YtU5xe8hD1Su7vSV'
let adminAddress = addressFromPublicKey(adminPublicKey)
match tx {
  case allow: ExchangeTransaction | TransferTransaction =>
    let assetId = match allow {
      case e: ExchangeTransaction =>
        e.sellOrder.assetPair.amountAsset
      case t: TransferTransaction =>
        t.assetId
    }
    let assetIdString = toBase58String(extract(assetId))
    let whitelistPK = extract(getString(adminAddress, assetIdString))
    let whitelistAddress = extract(addressFromPublicKey(fromBase58String(whitelistPK)))
    let senderAddress = match allow {
      case e: ExchangeTransaction =>
        e.sellOrder.sender
      case t: TransferTransaction =>
        t.sender
    }
    let recipientAddress = match allow {
      case t: TransferTransaction =>
        addressFromRecipient(t.recipient)
      case _ => throw()
    }
    let senderAccepted = getBoolean(whitelistAddress, toBase58String(senderAddress.bytes))
    let recipientAccepted = getBoolean(whitelistAddress, toBase58String(recipientAddress.bytes))
    match allow {
      case e: ExchangeTransaction =>
        if (!isDefined(senderAccepted))
          then throw()
          else extract(senderAccepted)
      case t: TransferTransaction =>
        if (!isDefined(senderAccepted) || !isDefined(recipientAccepted))
          then throw()
          else extract(senderAccepted) && extract(recipientAccepted)
    }
  case _ => true #dev
}
